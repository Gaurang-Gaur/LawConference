{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaura\\\\OneDrive\\\\Desktop\\\\logins\\\\client\\\\src\\\\context\\\\SocketProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useMemo, useContext } from \"react\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext(null);\nexport const useSocket = () => {\n  _s();\n\n  const socket = useContext(SocketContext);\n  return socket;\n}; // here for socket is just a end point for two dimensional\n// connection for being 2d connection we require socket  in frontend as \n// well as in backend\n// here we creating the socket in client by socket.io-client  \n// by using backend server inside the useMemo hook\n\n_s(useSocket, \"0R2d+Tq5R59clvH3S7Q6dYnlbX0=\");\n\nexport const SocketProvider = props => {\n  _s2();\n\n  const socket = useMemo(() => io(\"localhost:8000\"), []);\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: socket,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(SocketProvider, \"yju4yLe8blW0wXS6uCM4PqPgHLM=\");\n\n_c = SocketProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"sources":["C:/Users/gaura/OneDrive/Desktop/logins/client/src/context/SocketProvider.js"],"names":["React","createContext","useMemo","useContext","io","SocketContext","useSocket","socket","SocketProvider","props","children"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,OAA/B,EAAuCC,UAAvC,QAA0D,OAA1D;AACA,SAASC,EAAT,QAAmB,kBAAnB;;AAEA,MAAMC,aAAa,gBAAGJ,aAAa,CAAC,IAAD,CAAnC;AAEA,OAAO,MAAMK,SAAS,GAAG,MAAM;AAAA;;AAC7B,QAAMC,MAAM,GAAGJ,UAAU,CAACE,aAAD,CAAzB;AACA,SAAOE,MAAP;AACD,CAHM,C,CAKP;AACA;AACA;AACA;AACA;;GATaD,S;;AAWb,OAAO,MAAME,cAAc,GAAIC,KAAD,IAAW;AAAA;;AACvC,QAAMF,MAAM,GAAGL,OAAO,CAAC,MAAME,EAAE,CAAC,gBAAD,CAAT,EAA6B,EAA7B,CAAtB;AAEA,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAEG,MAA/B;AAAA,cACGE,KAAK,CAACC;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CARM;;IAAMF,c;;KAAAA,c","sourcesContent":["import React, { createContext, useMemo,useContext  } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst SocketContext = createContext(null);\r\n\r\nexport const useSocket = () => {\r\n  const socket = useContext(SocketContext);\r\n  return socket;\r\n};\r\n\r\n// here for socket is just a end point for two dimensional\r\n// connection for being 2d connection we require socket  in frontend as \r\n// well as in backend\r\n// here we creating the socket in client by socket.io-client  \r\n// by using backend server inside the useMemo hook\r\n\r\nexport const SocketProvider = (props) => {\r\n  const socket = useMemo(() => io(\"localhost:8000\"), []);\r\n\r\n  return (\r\n    <SocketContext.Provider value={socket}>\r\n      {props.children}\r\n    </SocketContext.Provider>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}