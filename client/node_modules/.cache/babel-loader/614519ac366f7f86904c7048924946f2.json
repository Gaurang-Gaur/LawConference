{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaura\\\\OneDrive\\\\Desktop\\\\logins\\\\client\\\\src\\\\components\\\\Main\\\\Screen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useCallback, useState } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport { useSocket } from \"../../context/SocketProvider\";\nimport peer from \"../../service/peer\"; // return object:0\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RoomPage = () => {\n  _s();\n\n  const [remoteSocketId, setRemoteSocketId] = useState(null);\n  const [myStream, setMyStream] = useState();\n  const socket = useSocket();\n  const handleUserJoined = useCallback(_ref => {\n    let {\n      email,\n      id\n    } = _ref;\n    console.log(`Email ${email} joined room`);\n    setRemoteSocketId(id);\n  }, []);\n  const handleCallUser = useCallback(async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: true\n    });\n    const offer = await peer.getOffer();\n    socket.emit(\"user:call\", {\n      to: remoteSocketId,\n      offer\n    });\n    setMyStream(stream);\n  }, []);\n  const handleIncommingCall = useCallback(_ref2 => {\n    let {\n      from,\n      offer\n    } = _ref2;\n    console.log(`offer from person1 ${offer}`);\n  }, []);\n  useEffect(() => {\n    socket.on(\"user:joined\", handleUserJoined);\n    socket.on(\"incoming:call\", handleIncommingCall);\n    return () => {\n      socket.off(\"user:joined\", handleUserJoined);\n      socket.off(\"incomning:call\", handleIncommingCall);\n    };\n  }, [socket, handleUserJoined]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: remoteSocketId ? \"Connected\" : \"No one in room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), remoteSocketId ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCallUser,\n      children: \"CALL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }, this) : \"\", myStream && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Stream\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ReactPlayer, {\n        playing: true,\n        muted: true,\n        height: \"100px\",\n        width: \"200px\",\n        url: myStream\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), \"        \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RoomPage, \"GzULCk/thp2LV2jaFNQ9yxzCqi0=\", false, function () {\n  return [useSocket];\n});\n\n_c = RoomPage;\nexport default RoomPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoomPage\");","map":{"version":3,"sources":["C:/Users/gaura/OneDrive/Desktop/logins/client/src/components/Main/Screen.jsx"],"names":["React","useEffect","useCallback","useState","ReactPlayer","useSocket","peer","RoomPage","remoteSocketId","setRemoteSocketId","myStream","setMyStream","socket","handleUserJoined","email","id","console","log","handleCallUser","stream","navigator","mediaDevices","getUserMedia","audio","video","offer","getOffer","emit","to","handleIncommingCall","from","on","off"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,WAAxB,EAAoCC,QAApC,QAAmD,OAAnD;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,SAAQC,SAAR,QAAwB,8BAAxB;AACA,OAAOC,IAAP,MAAiB,oBAAjB,C,CAAsC;;;;;AAKtC,MAAMC,QAAQ,GAAC,MAAI;AAAA;;AACf,QAAM,CAACC,cAAD,EAAgBC,iBAAhB,IAAmCN,QAAQ,CAAC,IAAD,CAAjD;AACA,QAAM,CAACO,QAAD,EAAUC,WAAV,IAAuBR,QAAQ,EAArC;AAEA,QAAMS,MAAM,GAACP,SAAS,EAAtB;AACA,QAAMQ,gBAAgB,GAACX,WAAW,CAAC,QAAc;AAAA,QAAb;AAACY,MAAAA,KAAD;AAAOC,MAAAA;AAAP,KAAa;AAC7CC,IAAAA,OAAO,CAACC,GAAR,CAAa,SAAQH,KAAM,cAA3B;AACAL,IAAAA,iBAAiB,CAACM,EAAD,CAAjB;AACH,GAHiC,EAGhC,EAHgC,CAAlC;AAKA,QAAMG,cAAc,GAAChB,WAAW,CAAC,YAAS;AACtC,UAAMiB,MAAM,GAAC,MAAMC,SAAS,CAACC,YAAV,CAAuBC,YAAvB,CAAoC;AACnDC,MAAAA,KAAK,EAAC,IAD6C;AAEnDC,MAAAA,KAAK,EAAC;AAF6C,KAApC,CAAnB;AAIA,UAAMC,KAAK,GAAC,MAAMnB,IAAI,CAACoB,QAAL,EAAlB;AACAd,IAAAA,MAAM,CAACe,IAAP,CAAY,WAAZ,EAAwB;AAACC,MAAAA,EAAE,EAACpB,cAAJ;AAAmBiB,MAAAA;AAAnB,KAAxB;AAGAd,IAAAA,WAAW,CAACQ,MAAD,CAAX;AACH,GAV+B,EAU9B,EAV8B,CAAhC;AAYA,QAAMU,mBAAmB,GAAC3B,WAAW,CAAC,SAAgB;AAAA,QAAf;AAAC4B,MAAAA,IAAD;AAAML,MAAAA;AAAN,KAAe;AAClDT,IAAAA,OAAO,CAACC,GAAR,CAAa,sBAAqBQ,KAAM,EAAxC;AAEH,GAHoC,EAGnC,EAHmC,CAArC;AAKAxB,EAAAA,SAAS,CAAC,MAAI;AACVW,IAAAA,MAAM,CAACmB,EAAP,CAAU,aAAV,EAAwBlB,gBAAxB;AACAD,IAAAA,MAAM,CAACmB,EAAP,CAAU,eAAV,EAA0BF,mBAA1B;AACA,WAAO,MAAI;AACPjB,MAAAA,MAAM,CAACoB,GAAP,CAAW,aAAX,EAAyBnB,gBAAzB;AACAD,MAAAA,MAAM,CAACoB,GAAP,CAAW,gBAAX,EAA4BH,mBAA5B;AACH,KAHD;AAIH,GAPQ,EAOP,CAACjB,MAAD,EAAQC,gBAAR,CAPO,CAAT;AAaA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACA;AAAA,gBAAKL,cAAc,GAAC,WAAD,GAAa;AAAhC;AAAA;AAAA;AAAA;AAAA,YADA,EAECA,cAAc,gBAAC;AAAQ,MAAA,OAAO,EAAEU,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAD,GAAgD,EAF/D,EAGCR,QAAQ,iBACT;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,WAAD;AACE,QAAA,OAAO,MADT;AAEE,QAAA,KAAK,MAFP;AAIE,QAAA,MAAM,EAAC,OAJT;AAKE,QAAA,KAAK,EAAC,OALR;AAME,QAAA,GAAG,EAAEA;AANP;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,oBAJA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CA1DD;;GAAMH,Q;UAIWF,S;;;KAJXE,Q;AA4DN,eAAeA,QAAf","sourcesContent":["import React,{useEffect,useCallback,useState} from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport {useSocket} from \"../../context/SocketProvider\";\r\nimport peer from \"../../service/peer\";// return object:0\r\n\r\n\r\n\r\n\r\nconst RoomPage=()=>{\r\n    const [remoteSocketId,setRemoteSocketId]=useState(null);\r\n    const [myStream,setMyStream]=useState();\r\n    \r\n    const socket=useSocket();\r\n    const handleUserJoined=useCallback(({email,id})=>{\r\n        console.log(`Email ${email} joined room`);\r\n        setRemoteSocketId(id);\r\n    },[]);\r\n    \r\n    const handleCallUser=useCallback(async()=>{\r\n        const stream=await navigator.mediaDevices.getUserMedia({\r\n            audio:true,\r\n            video:true,\r\n        });\r\n        const offer=await peer.getOffer();\r\n        socket.emit(\"user:call\",{to:remoteSocketId,offer});\r\n\r\n\r\n        setMyStream(stream);\r\n    },[])\r\n    \r\n    const handleIncommingCall=useCallback(({from,offer})=>{\r\n        console.log(`offer from person1 ${offer}`);\r\n\r\n    },[]);\r\n\r\n    useEffect(()=>{\r\n        socket.on(\"user:joined\",handleUserJoined);\r\n        socket.on(\"incoming:call\",handleIncommingCall);\r\n        return ()=>{\r\n            socket.off(\"user:joined\",handleUserJoined);\r\n            socket.off(\"incomning:call\",handleIncommingCall);\r\n        }\r\n    },[socket,handleUserJoined])\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"app\">\r\n        <h4>{remoteSocketId?\"Connected\":\"No one in room\"}</h4>\r\n        {remoteSocketId?<button onClick={handleCallUser}>CALL</button>:\"\"}\r\n        {myStream && (\r\n        <>\r\n          <h1>My Stream</h1>\r\n          <ReactPlayer\r\n            playing\r\n            muted\r\n            \r\n            height=\"100px\"\r\n            width=\"200px\"\r\n            url={myStream}\r\n          />\r\n        </>\r\n      )}        </div>\r\n    )\r\n}\r\n\r\nexport default RoomPage;"]},"metadata":{},"sourceType":"module"}