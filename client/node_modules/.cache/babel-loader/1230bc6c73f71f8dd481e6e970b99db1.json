{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaura\\\\OneDrive\\\\Desktop\\\\lawConference\\\\client\\\\src\\\\components\\\\Main\\\\Screen.jsx\",\n    _s = $RefreshSig$();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RoomPage = () => {\n  _s();\n\n  const socket = useSocket();\n  const [remoteSocketId, setRemoteSocketId] = useState(null);\n  const [myStream, setMyStream] = useState();\n  const [remoteStream, setRemoteStream] = useState();\n  const handleUserJoined = useCallback(_ref => {\n    let {\n      email,\n      id\n    } = _ref;\n    console.log(`Email ${email} joined room`);\n    setRemoteSocketId(id);\n  }, []);\n  const handleCallUser = useCallback(async () => {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: true\n    });\n    const offer = await peer.getOffer();\n    socket.emit(\"user:call\", {\n      to: remoteSocketId,\n      offer\n    });\n    setMyStream(stream);\n  }, [remoteSocketId, socket]);\n  const handleIncommingCall = useCallback(async _ref2 => {\n    let {\n      from,\n      offer\n    } = _ref2;\n    setRemoteSocketId(from);\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n      video: true\n    });\n    setMyStream(stream);\n    console.log(`Incoming Call`, from, offer);\n    const ans = await peer.getAnswer(offer);\n    socket.emit(\"call:accepted\", {\n      to: from,\n      ans\n    });\n  }, [socket]);\n  const sendStreams = useCallback(() => {\n    for (const track of myStream.getTracks()) {\n      peer.peer.addTrack(track, myStream);\n    }\n  }, [myStream]);\n  const handleCallAccepted = useCallback(_ref3 => {\n    let {\n      from,\n      ans\n    } = _ref3;\n    peer.setLocalDescription(ans);\n    console.log(\"Call Accepted!\");\n    sendStreams();\n  }, [sendStreams]);\n  const handleNegoNeeded = useCallback(async () => {\n    const offer = await peer.getOffer();\n    socket.emit(\"peer:nego:needed\", {\n      offer,\n      to: remoteSocketId\n    });\n  }, [remoteSocketId, socket]);\n  useEffect(() => {\n    peer.peer.addEventListener(\"negotiationneeded\", handleNegoNeeded);\n    return () => {\n      peer.peer.removeEventListener(\"negotiationneeded\", handleNegoNeeded);\n    };\n  }, [handleNegoNeeded]);\n  const handleNegoNeedIncomming = useCallback(async _ref4 => {\n    let {\n      from,\n      offer\n    } = _ref4;\n    const ans = await peer.getAnswer(offer);\n    socket.emit(\"peer:nego:done\", {\n      to: from,\n      ans\n    });\n  }, [socket]);\n  const handleNegoNeedFinal = useCallback(async _ref5 => {\n    let {\n      ans\n    } = _ref5;\n    await peer.setLocalDescription(ans);\n  }, []);\n  useEffect(() => {\n    peer.peer.addEventListener(\"track\", async ev => {\n      const remoteStream = ev.streams;\n      console.log(\"GOT TRACKS!!\");\n      setRemoteStream(remoteStream[0]);\n    });\n  }, []);\n  useEffect(() => {\n    socket.on(\"user:joined\", handleUserJoined);\n    socket.on(\"incomming:call\", handleIncommingCall);\n    socket.on(\"call:accepted\", handleCallAccepted);\n    socket.on(\"peer:nego:needed\", handleNegoNeedIncomming);\n    socket.on(\"peer:nego:final\", handleNegoNeedFinal);\n    return () => {\n      socket.off(\"user:joined\", handleUserJoined);\n      socket.off(\"incomming:call\", handleIncommingCall);\n      socket.off(\"call:accepted\", handleCallAccepted);\n      socket.off(\"peer:nego:needed\", handleNegoNeedIncomming);\n      socket.off(\"peer:nego:final\", handleNegoNeedFinal);\n    };\n  }, [socket, handleUserJoined, handleIncommingCall, handleCallAccepted, handleNegoNeedIncomming, handleNegoNeedFinal]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Room Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: remoteSocketId ? \"Connected\" : \"No one in room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), myStream && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendStreams,\n      children: \"Send Stream\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 20\n    }, this), remoteSocketId && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCallUser,\n      children: \"CALL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 26\n    }, this), myStream && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Stream\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ReactPlayer, {\n        playing: true,\n        muted: true,\n        height: \"100px\",\n        width: \"200px\",\n        url: myStream\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), remoteStream && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Remote Stream\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ReactPlayer, {\n        playing: true,\n        muted: true,\n        height: \"100px\",\n        width: \"200px\",\n        url: remoteStream\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RoomPage, \"Y5mpP1FK0y3pxy+1t0fq4/dIwPk=\", true);\n\n_c = RoomPage;\nexport default RoomPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoomPage\");","map":{"version":3,"sources":["C:/Users/gaura/OneDrive/Desktop/lawConference/client/src/components/Main/Screen.jsx"],"names":["RoomPage","socket","useSocket","remoteSocketId","setRemoteSocketId","useState","myStream","setMyStream","remoteStream","setRemoteStream","handleUserJoined","useCallback","email","id","console","log","handleCallUser","stream","navigator","mediaDevices","getUserMedia","audio","video","offer","peer","getOffer","emit","to","handleIncommingCall","from","ans","getAnswer","sendStreams","track","getTracks","addTrack","handleCallAccepted","setLocalDescription","handleNegoNeeded","useEffect","addEventListener","removeEventListener","handleNegoNeedIncomming","handleNegoNeedFinal","ev","streams","on","off"],"mappings":"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","sourcesContent":["const RoomPage = () => {\r\n  const socket = useSocket();\r\n  const [remoteSocketId, setRemoteSocketId] = useState(null);\r\n  const [myStream, setMyStream] = useState();\r\n  const [remoteStream, setRemoteStream] = useState();\r\n\r\n  const handleUserJoined = useCallback(({ email, id }) => {\r\n    console.log(`Email ${email} joined room`);\r\n    setRemoteSocketId(id);\r\n  }, []);\r\n\r\n  const handleCallUser = useCallback(async () => {\r\n    const stream = await navigator.mediaDevices.getUserMedia({\r\n      audio: true,\r\n      video: true,\r\n    });\r\n    const offer = await peer.getOffer();\r\n    socket.emit(\"user:call\", { to: remoteSocketId, offer });\r\n    setMyStream(stream);\r\n  }, [remoteSocketId, socket]);\r\n\r\n  const handleIncommingCall = useCallback(\r\n    async ({ from, offer }) => {\r\n      setRemoteSocketId(from);\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        audio: true,\r\n        video: true,\r\n      });\r\n      setMyStream(stream);\r\n      console.log(`Incoming Call`, from, offer);\r\n      const ans = await peer.getAnswer(offer);\r\n      socket.emit(\"call:accepted\", { to: from, ans });\r\n    },\r\n    [socket]\r\n  );\r\n\r\n  const sendStreams = useCallback(() => {\r\n    for (const track of myStream.getTracks()) {\r\n      peer.peer.addTrack(track, myStream);\r\n    }\r\n  }, [myStream]);\r\n\r\n  const handleCallAccepted = useCallback(\r\n    ({ from, ans }) => {\r\n      peer.setLocalDescription(ans);\r\n      console.log(\"Call Accepted!\");\r\n      sendStreams();\r\n    },\r\n    [sendStreams]\r\n  );\r\n\r\n  const handleNegoNeeded = useCallback(async () => {\r\n    const offer = await peer.getOffer();\r\n    socket.emit(\"peer:nego:needed\", { offer, to: remoteSocketId });\r\n  }, [remoteSocketId, socket]);\r\n\r\n  useEffect(() => {\r\n    peer.peer.addEventListener(\"negotiationneeded\", handleNegoNeeded);\r\n    return () => {\r\n      peer.peer.removeEventListener(\"negotiationneeded\", handleNegoNeeded);\r\n    };\r\n  }, [handleNegoNeeded]);\r\n\r\n  const handleNegoNeedIncomming = useCallback(\r\n    async ({ from, offer }) => {\r\n      const ans = await peer.getAnswer(offer);\r\n      socket.emit(\"peer:nego:done\", { to: from, ans });\r\n    },\r\n    [socket]\r\n  );\r\n\r\n  const handleNegoNeedFinal = useCallback(async ({ ans }) => {\r\n    await peer.setLocalDescription(ans);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    peer.peer.addEventListener(\"track\", async (ev) => {\r\n      const remoteStream = ev.streams;\r\n      console.log(\"GOT TRACKS!!\");\r\n      setRemoteStream(remoteStream[0]);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"user:joined\", handleUserJoined);\r\n    socket.on(\"incomming:call\", handleIncommingCall);\r\n    socket.on(\"call:accepted\", handleCallAccepted);\r\n    socket.on(\"peer:nego:needed\", handleNegoNeedIncomming);\r\n    socket.on(\"peer:nego:final\", handleNegoNeedFinal);\r\n\r\n    return () => {\r\n      socket.off(\"user:joined\", handleUserJoined);\r\n      socket.off(\"incomming:call\", handleIncommingCall);\r\n      socket.off(\"call:accepted\", handleCallAccepted);\r\n      socket.off(\"peer:nego:needed\", handleNegoNeedIncomming);\r\n      socket.off(\"peer:nego:final\", handleNegoNeedFinal);\r\n    };\r\n  }, [\r\n    socket,\r\n    handleUserJoined,\r\n    handleIncommingCall,\r\n    handleCallAccepted,\r\n    handleNegoNeedIncomming,\r\n    handleNegoNeedFinal,\r\n  ]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Room Page</h1>\r\n      <h4>{remoteSocketId ? \"Connected\" : \"No one in room\"}</h4>\r\n      {myStream && <button onClick={sendStreams}>Send Stream</button>}\r\n      {remoteSocketId && <button onClick={handleCallUser}>CALL</button>}\r\n      {myStream && (\r\n        <>\r\n          <h1>My Stream</h1>\r\n          <ReactPlayer\r\n            playing\r\n            muted\r\n            height=\"100px\"\r\n            width=\"200px\"\r\n            url={myStream}\r\n          />\r\n        </>\r\n      )}\r\n      {remoteStream && (\r\n        <>\r\n          <h1>Remote Stream</h1>\r\n          <ReactPlayer\r\n            playing\r\n            muted\r\n            height=\"100px\"\r\n            width=\"200px\"\r\n            url={remoteStream}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomPage;"]},"metadata":{},"sourceType":"module"}