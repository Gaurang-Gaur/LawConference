{"ast":null,"code":"class PeerService {\n  constructor() {\n    if (!this.peer) {\n      this.peer = new RTCPeerConnection({\n        iceServers: [{\n          urls: [\"stun:stun.l.google.com:19302\", \"stun:global.stun.twilio.com:3478\"]\n        }]\n      });\n    }\n  }\n\n  async getAnswer(offer) {\n    if (this.peer) {\n      await this.peer.setRemoteDescription(offer);\n      const ans = await this.peer.createAnswer();\n      await this.peer.setLocalDescription(new RTCSessionDescription(ans));\n      return ans;\n    }\n  }\n\n  async setLocalDescription(ans) {\n    if (this.peer) {\n      await this.peer.setRemoteDescription(new RTCSessionDescription(ans));\n    }\n  }\n\n  async getOffer() {\n    if (this.peer) {\n      const offer = await this.peer.createOffer();\n      await this.peer.setLocalDescription(new RTCSessionDescription(offer));\n      return offer;\n    }\n  }\n\n}\n\nexport default new PeerService();","map":{"version":3,"sources":["C:/Users/gaura/OneDrive/Desktop/logins/client/src/service/peer.js"],"names":["PeerService","constructor","peer","RTCPeerConnection","iceServers","urls","getAnswer","offer","setRemoteDescription","ans","createAnswer","setLocalDescription","RTCSessionDescription","getOffer","createOffer"],"mappings":"AAAA,MAAMA,WAAN,CAAkB;AACdC,EAAAA,WAAW,GAAG;AACZ,QAAI,CAAC,KAAKC,IAAV,EAAgB;AACd,WAAKA,IAAL,GAAY,IAAIC,iBAAJ,CAAsB;AAChCC,QAAAA,UAAU,EAAE,CACV;AACEC,UAAAA,IAAI,EAAE,CACJ,8BADI,EAEJ,kCAFI;AADR,SADU;AADoB,OAAtB,CAAZ;AAUD;AACF;;AACc,QAATC,SAAS,CAACC,KAAD,EAAQ;AACrB,QAAI,KAAKL,IAAT,EAAe;AACb,YAAM,KAAKA,IAAL,CAAUM,oBAAV,CAA+BD,KAA/B,CAAN;AACA,YAAME,GAAG,GAAG,MAAM,KAAKP,IAAL,CAAUQ,YAAV,EAAlB;AACA,YAAM,KAAKR,IAAL,CAAUS,mBAAV,CAA8B,IAAIC,qBAAJ,CAA0BH,GAA1B,CAA9B,CAAN;AACA,aAAOA,GAAP;AACD;AACF;;AAEwB,QAAnBE,mBAAmB,CAACF,GAAD,EAAM;AAC7B,QAAI,KAAKP,IAAT,EAAe;AACb,YAAM,KAAKA,IAAL,CAAUM,oBAAV,CAA+B,IAAII,qBAAJ,CAA0BH,GAA1B,CAA/B,CAAN;AACD;AACF;;AAEa,QAARI,QAAQ,GAAG;AACb,QAAI,KAAKX,IAAT,EAAe;AACb,YAAMK,KAAK,GAAG,MAAM,KAAKL,IAAL,CAAUY,WAAV,EAApB;AACA,YAAM,KAAKZ,IAAL,CAAUS,mBAAV,CAA8B,IAAIC,qBAAJ,CAA0BL,KAA1B,CAA9B,CAAN;AACA,aAAOA,KAAP;AACD;AACF;;AApCW;;AAuCd,eAAe,IAAIP,WAAJ,EAAf","sourcesContent":["class PeerService {\r\n    constructor() {\r\n      if (!this.peer) {\r\n        this.peer = new RTCPeerConnection({\r\n          iceServers: [\r\n            {\r\n              urls: [\r\n                \"stun:stun.l.google.com:19302\",\r\n                \"stun:global.stun.twilio.com:3478\",\r\n              ],\r\n            },\r\n          ],\r\n        });\r\n      }\r\n    }\r\n    async getAnswer(offer) {\r\n      if (this.peer) {\r\n        await this.peer.setRemoteDescription(offer);\r\n        const ans = await this.peer.createAnswer();\r\n        await this.peer.setLocalDescription(new RTCSessionDescription(ans));\r\n        return ans;\r\n      }\r\n    }\r\n\r\n    async setLocalDescription(ans) {\r\n      if (this.peer) {\r\n        await this.peer.setRemoteDescription(new RTCSessionDescription(ans));\r\n      }\r\n    }\r\n  \r\n    async getOffer() {\r\n        if (this.peer) {\r\n          const offer = await this.peer.createOffer();\r\n          await this.peer.setLocalDescription(new RTCSessionDescription(offer));\r\n          return offer;\r\n        }\r\n      }\r\n    }\r\n    \r\n    export default new PeerService();"]},"metadata":{},"sourceType":"module"}